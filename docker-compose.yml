version: '3'
services:
  #kafka
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
      
  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    links:
      - zookeeper
    ports:
      - 9092:9092
      - 5005:5005
      - 7071:7071
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - logs:/opt/kafka/logs
      - docker-sock:/var/run/docker.sock
  
  kafka-exporter:
    container_name: kafka-exporter
    image: danielqsj/kafka-exporter
    restart: unless-stopped
    command: ["--kafka.server=findo-kafka:9092"]
    ports:
      - 9100:9100
    depends_on:
      - kafka
    logging:
        driver: "json-file"
        options:
          max-size: "5m"
          
          
  #redis
  redis:
    container_name: redis
    restart: always
    image: redis:6.2
    ports:
      - 6379:6379
    command: redis-server /etc/redis/redis.conf
    volumes:
      - ./redis:/etc/redis
      - redis-data:/data
  
  #mongo
  mongodb:
    image: mongo:latest
    
  #postgresql
  postgres:
    image: postgres
    ports:
          - '5432:5432'
    environment:
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=postgres
    volumes: 
          - postgres-data:/var/lib/postgresql/data
          # copy the sql script to create tables
          - ./postgresql/sql/init.sql:/docker-entrypoint-initdb.d/01_init.sql
          - ./postgresql/sql/create_tables.sql:/docker-entrypoint-initdb.d/02_create_tables.sql
          

volumes:
  logs: 
  docker-sock: 
  postgres-data:
  redis-data: